services:
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: letmepass!!42
      POSTGRES_INITDB_ARGS: '--locale-provider=icu --icu-locale=da_DK'
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 2s
      timeout: 5s
      retries: 5

  elasticsearch:
    build:
      context: ./elasticsearch
      dockerfile: ./Dockerfile
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      discovery.type: 'single-node'
      xpack.security.enabled: 'false'
      xpack.security.enrollment.enabled: 'false'
      ES_JAVA_OPTS: '-Xms1024m -Xmx1024m'
      bootstrap.memory_lock: 'true'
    healthcheck:
      test: curl --fail elasticsearch:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: kibana:8.10.2
    depends_on:
      elasticsearch:
        condition: service_started
    ports:
      - '5601:5601'

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: josi
      MONGO_INITDB_ROOT_PASSWORD: letmepass!!42
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      mongo:
        condition: service_started
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: josi
      ME_CONFIG_MONGODB_ADMINPASSWORD: letmepass!!42
      ME_CONFIG_MONGODB_URL: mongodb://josi:letmepass!!42@mongo:27017/
