stages:
 - stage: Provision
   jobs:
   - job: Provision
     variables:
     - group: Terraform
     steps:
     - task: PowerShell@2
       name: terraform
       inputs:
         targetType: 'inline'
         script: |
           terraform init -input=false
           #terraform apply -auto-approve -target="azurerm_windows_web_app.josi_architecture_webapi"
           #terraform apply -auto-approve
           terraform apply -auto-approve -target="azurerm_static_site.josi_architecture_angular_site"
           Write-Host "##vso[task.setvariable variable=angular_site_api_key;isOutput=true](terraform output angular_site_api_key)"
#  - stage: Api
#    jobs:
#    - job: PublishAndDeploy
#      displayName: 'Publish and deploy api'
#      steps:
#      - task: DotNetCoreCLI@2
#        displayName: 'Publish the Api project'
#        inputs:
#          command: 'publish'
#          publishWebProjects: false
#          projects: 'src/JosiArchitecture.Api/JosiArchitecture.Api.csproj'
#          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#          zipAfterPublish: True
#      - task: PublishBuildArtifacts@1
#        displayName: 'Publish build artifact'
#        inputs:
#          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#          ArtifactName: 'drop'
#          publishLocation: 'Container'
#      - task: AzureRmWebAppDeployment@4
#        displayName: 'Deploy Api to Azure App Service'
#        inputs:
#          azureSubscription: 'Betalt efter forbrug(fd949dc3-162d-4991-a986-02631830a313)'
#          appType: 'webApp'
#          webAppName: 'josi-architecture-webapi'
#          package: '$(Build.ArtifactStagingDirectory)/**/JosiArchitecture.Api.zip'
 - stage: Angular
   dependsOn: Provision
   variables:
    angular_site_api_key: $[ dependencies.Provision.outputs['terraform.angular_site_api_key'] ]
   jobs:
   - job: Angular
     displayName: Build and deploy Angular app
     steps:
       - task: PowerShell@2
         inputs:
           targetType: 'inline'
           script: "echo ${dependencies.Provision.outputs['terraform.angular_site_api_key']}"
       - task: AzureStaticWebApp@0
         inputs:
           azure_static_web_apps_api_token: $(angular_site_api_key)
           app_location: '/src/JosiArchitecture.AngularApp'
           output_location: '/dist/josi-architecture.angular-app'
           
    #  - task: 
    #  - name: Build And Deploy
    #    id: builddeploy
    #    uses: Azure/static-web-apps-deploy@v1
    #    with:
    #      azure_static_web_apps_api_token: 
    #      repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
    #      action: "upload"
    #      ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
    #      # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
    #      app_location: "/src/JosiArchitecture.AngularApp" # App source code path
    #      api_location: "" # Api source code path - optional
    #      output_location: "/dist/josi-architecture.angular-app" # Built app content directory - optional
    #      ###### End of Repository/Build Configurations ######