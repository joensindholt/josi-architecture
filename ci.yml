stages:
 - stage: Provision
   jobs:
   - job: Provision
     variables:
     - group: Terraform
     steps:
     - task: PowerShell@2
       inputs:
         targetType: 'inline'
         script: |
           terraform init -input=false
           terraform apply -auto-approve
 - stage: BuildAndDeploy
   jobs:
   - job: BuildAndDeploy
     displayName: 'Build API and deploy to Azure App Service'
     pool:
       vmImage: 'windows-latest'
     steps:
     - task: DotNetCoreCLI@2
       displayName: 'Build the API project'
       inputs:
         command: 'build'
         projects: 'src/JosiArchitecture.Api/JosiArchitecture.Api.csproj'
     - task: DotNetCoreCLI@2
       displayName: 'Publish the API project'
       inputs:
         command: 'publish'
         publishWebProjects: false
         projects: 'src/JosiArchitecture.Api/JosiArchitecture.Api.csproj'
         arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
         zipAfterPublish: True
    #  - task: AzureRmWebAppDeployment@4
    #    displayName: 'Deploy the API project'
    #    inputs:
    #      connectionType: 'AzureRM'
    #      azureSubscription: 'Betalt efter forbrug(fd949dc3-162d-4991-a986-02631830a313)'
    #      appType: 'webApp'
    #      webAppName: 'josi-architecture-webapi'
    #      #PackageForLinux: '$(Build.ArtifactStagingDirectory)'
    #      package: '$(Build.ArtifactStagingDirectory)'
    #     #  TakeAppOfflineFlag: true
    #      useWebDeploy: true
    #      enableCustomDeployment: true
    #      deploymentMethod: 'webDeploy'
     - task: PublishBuildArtifacts@1
       displayName: 'Publish build artifact'
       inputs:
         PathtoPublish: '$(Build.ArtifactStagingDirectory)'
         ArtifactName: 'drop'
         publishLocation: 'Container'

